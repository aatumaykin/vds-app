---
services:
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file:
      - .env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
      - PERSISTENTKEEPALIVE_PEERS=15
      - LOG_CONFS=true
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - ${WIREGUARD_PORT:-51820}:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: ["iptables -t nat -A POSTROUTING -o wg0 -j MASQUERADE && /init"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      proxy:
        ipv4_address: ${WIREGUARD_CONTAINER_IP:-10.0.0.2}

  adguard:
    container_name: adguard
    image: adguard/adguardhome
    restart: unless-stopped
    hostname: adguard
    volumes:
      - "./adguard/work:/opt/adguardhome/work"
      - "./adguard/conf:/opt/adguardhome/conf"
    networks:
      proxy:
        ipv4_address: ${ADGUARD_CONTAINER_IP:-10.0.0.100}
    extra_hosts:
      - "host.docker.internal:host-gateway"

  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    env_file:
      - .env
    environment:
      GID: 1000
      COLLECTIONS: "crowdsecurity/linux crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules"
      TZ: Europe/Moscow
    volumes:
      - ./crowdsec/db:/var/lib/crowdsec/data/
      - ./crowdsec/config:/etc/crowdsec/
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - ./traefik/logs:/var/log/traefik/:ro
    networks:
      proxy:
        ipv4_address: ${CROWDSEC_CONTAINER_IP:-10.0.0.4}
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
    expose:
      - 8080
    env_file:
      - .env
    entrypoint: ["/bin/sh", "-c"]
    command: ["ip route add 192.168.0.0/16 via ${WIREGUARD_CONTAINER_IP} && traefik"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/config:/config:ro
      - ./traefik/logs:/var/log/traefik
    networks:
      proxy:
        ipv4_address: ${TRAEFIK_CONTAINER_IP:-10.0.0.3}
    depends_on:
      - crowdsec
    labels:
      traefik.enable: true

      # redirection HTTP to HTTPS
      traefik.http.routers.http_catchall.entrypoints: http
      traefik.http.routers.http_catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http_catchall.middlewares: https-redirect@file

      # dashboard
      traefik.http.routers.traefik.rule: PathPrefix(`/api`) || PathPrefix(`/dashboard`)
      traefik.http.routers.traefik.entrypoints: internal
      traefik.http.routers.traefik.service: api@internal

networks:
  proxy:
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET:-10.0.0.0/24}